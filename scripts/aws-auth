#!/bin/sh

set -e

if [ -z $PLUGIN_ROLE ]; then
    echo "Error: please provide aws role to assume"
    exit 1
fi

if [ -z $PLUGIN_FILE_FORMAT ]; then
    PLUGIN_FILE_FORMAT="sh"
fi

if [ -z $PLUGIN_FILE ]; then
    PLUGIN_FILE=".env"
fi

if ((${#PLUGIN_CREDENTIALS} > 10)); then
    IFS='.' read -ra aws_credentials <<< "$PLUGIN_CREDENTIALS"
    aws configure set aws_access_key_id "${aws_credentials[0]}"
    aws configure set aws_secret_access_key "${aws_credentials[1]}"
fi

echo "Assuming: ${PLUGIN_ROLE}"
CREDS=`aws sts assume-role --role-arn ${PLUGIN_ROLE} --role-session-name=${DRONE_REPO_OWNER}-${DRONE_REPO_NAME}`

AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')
AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')
AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')

if [ "$PLUGIN_FILE_FORMAT" == "dotenv" ]; then
    echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> ${PLUGIN_FILE}
    echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> ${PLUGIN_FILE}
    echo "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" >> ${PLUGIN_FILE}
    exit 1
fi

echo "export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> ${PLUGIN_FILE}
echo "export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> ${PLUGIN_FILE}
echo "export AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" >> ${PLUGIN_FILE}